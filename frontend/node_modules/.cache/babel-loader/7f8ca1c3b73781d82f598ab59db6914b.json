{"ast":null,"code":"var _jsxFileName = \"/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Rigister';\nimport * as auth from '../utils/auth';\nimport InfoTooltip from './InfoTooltip';\nimport Success from \"../images/Success.svg\";\nimport unSuccess from \"../images/unSuccess.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n  const [email, setEmail] = React.useState('');\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [message, setMessage] = React.useState({\n    img: '',\n    text: ''\n  });\n  React.useEffect(() => {\n    if (loggedIn) {\n      api.getApiUserInfo().then(user => {\n        setCurrentUser(user.data);\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn]);\n  React.useEffect(() => {\n    if (loggedIn) {\n      api.getCards().then(cards => {\n        console.log(cards);\n        setCards(cards.reverse());\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn]);\n\n  function onUpdateUser(userData) {\n    api.setApiUserInfo(userData).then(user => {\n      setCurrentUser(user.data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function onUpdateAvatar(userData) {\n    api.setAvatar(userData).then(user => {\n      setCurrentUser(user.data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(cardData) {\n    api.postCards(cardData).then(newCard => {\n      console.log(newCard);\n      console.log(cards.data);\n      console.log(cards);\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(id => id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => console.log(err));\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function onCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoTooltipOpen(false);\n  }\n\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('token');\n    console.log(jwt);\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        setLoggedIn(true);\n        setEmail(res.data.email);\n        history.push('/');\n      }).catch(err => console.log(err));\n    }\n  }\n\n  function handleRegistration(password, email) {\n    auth.register(password, email).then(result => {\n      setEmail(result.data.email);\n      setMessage({\n        img: Success,\n        text: 'Вы успешно зарегистрировались!'\n      });\n      history.push('/sign-in');\n    }).catch(() => setMessage({\n      img: unSuccess,\n      text: 'Что-то пошло не так! Попробуйте ещё раз.'\n    })).finally(() => setIsInfoTooltipOpen(true));\n  }\n\n  function handleAuth(password, email) {\n    auth.authorize(password, email).then(() => {\n      setLoggedIn(true);\n      localStorage.setItem('token', token);\n      history.push('/');\n      setEmail(email);\n    }).catch(err => console.log(err));\n  }\n\n  function onSignOut() {\n    localStorage.removeItem('token');\n    const jwt = localStorage.getItem('token');\n    console.log(jwt);\n    setLoggedIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email,\n        onSignOut: onSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: onCardClick,\n          handleCardLike: handleCardLike,\n          handleCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            isOpen: isEditProfilePopupOpen,\n            onRegister: handleRegistration,\n            isInfoTooltipOpen: isInfoTooltipOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            isOpen: isEditProfilePopupOpen,\n            onAuth: handleAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"tooltip\",\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        title: message.text,\n        img: message.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: onUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: onUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"MQk27SuSlRlENtjGGuWgQ31RMNs=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/src/components/App.jsx"],"names":["React","Header","Footer","Main","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Route","Switch","useHistory","ProtectedRoute","Login","Register","auth","InfoTooltip","App","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","history","email","setEmail","isInfoTooltipOpen","setIsInfoTooltipOpen","message","setMessage","img","text","useEffect","getApiUserInfo","then","user","data","catch","err","console","log","getCards","reverse","onUpdateUser","userData","setApiUserInfo","closeAllPopups","onUpdateAvatar","setAvatar","handleAddPlaceSubmit","cardData","postCards","newCard","handleCardLike","card","isLiked","likes","some","id","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","onCardClick","closeByEscape","e","key","document","addEventListener","removeEventListener","tokenCheck","jwt","localStorage","getItem","getContent","res","push","handleRegistration","password","register","result","Success","unSuccess","finally","handleAuth","authorize","setItem","token","onSignOut","removeItem"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Main from './Main'\nimport ImagePopup from './ImagePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport api from '../utils/api'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport ProtectedRoute from './ProtectedRoute'\nimport Login from './Login'\nimport Register from './Rigister'\nimport * as auth from '../utils/auth'\nimport InfoTooltip from './InfoTooltip'\nimport Success from '../images/Success.svg'\nimport unSuccess from '../images/unSuccess.svg'\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState(null)\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    const [loggedIn, setLoggedIn] = React.useState(false)\n    const history = useHistory()\n    const [email, setEmail] = React.useState('')\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false)\n    const [message, setMessage] = React.useState({ img: '', text: '' })\n\n    React.useEffect(() => {\n        if (loggedIn) {\n            api.getApiUserInfo()\n                .then((user) => {\n                    setCurrentUser(user.data)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [loggedIn])\n\n    React.useEffect(() => {\n        if (loggedIn) {\n            api.getCards()\n                .then((cards) => {\n                    console.log(cards);\n                    setCards(cards.reverse())\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [loggedIn])\n\n    function onUpdateUser(userData) {\n        api.setApiUserInfo(userData)\n            .then((user) => {\n                setCurrentUser(user.data)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function onUpdateAvatar(userData) {\n        api.setAvatar(userData)\n            .then((user) => {\n                setCurrentUser(user.data)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        api.postCards(cardData)\n            .then((newCard) => {\n                console.log(newCard);\n                console.log(cards.data);\n                console.log(cards);\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(id => id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((item) => item !== card))\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function onCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setSelectedCard(null)\n        setIsInfoTooltipOpen(false)\n    }\n\n    React.useEffect(() => {\n        const closeByEscape = (e) => {\n            if (e.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n\n        document.addEventListener('keydown', closeByEscape)\n\n        return () => document.removeEventListener('keydown', closeByEscape)\n    }, [])\n\n\n    React.useEffect(() => {\n        tokenCheck()\n    }, [])\n\n    function tokenCheck() {\n        const jwt = localStorage.getItem('token')\n        console.log(jwt)\n\n        if (jwt) {\n            auth.getContent(jwt)\n                .then((res) => {\n                    setLoggedIn(true)\n                    setEmail(res.data.email)\n                    history.push('/')\n                })\n                .catch((err) => console.log(err))\n        }\n    }\n\n    function handleRegistration(password, email) {\n        auth.register(password, email)\n            .then((result) => {\n                setEmail(result.data.email)\n                setMessage({ img: Success, text: 'Вы успешно зарегистрировались!' })\n                history.push('/sign-in')\n            })\n            .catch(() => setMessage({ img: unSuccess, text: 'Что-то пошло не так! Попробуйте ещё раз.' }))\n            .finally(() => setIsInfoTooltipOpen(true))\n    }\n\n    function handleAuth(password, email) {\n        auth.authorize(password, email)\n            .then(() => {\n\n                setLoggedIn(true)\n                localStorage.setItem('token', token)\n                history.push('/')\n                setEmail(email)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function onSignOut() {\n        localStorage.removeItem('token')\n        const jwt = localStorage.getItem('token');\n        console.log(jwt)\n        setLoggedIn(false)\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header loggedIn={loggedIn} email={email} onSignOut={onSignOut} />\n                <Switch>\n                    <ProtectedRoute exact path='/' loggedIn={loggedIn} component={Main} onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={onCardClick} handleCardLike={handleCardLike} handleCardDelete={handleCardDelete} cards={cards} />\n                    <Route path='/sign-in'>\n                        <Register isOpen={isEditProfilePopupOpen} onRegister={handleRegistration} isInfoTooltipOpen={isInfoTooltipOpen} />\n                    </Route>\n                    <Route path='/sign-up'>\n                        <Login isOpen={isEditProfilePopupOpen} onAuth={handleAuth} />\n                    </Route>\n                </Switch>\n                <Footer />\n\n                <InfoTooltip name='tooltip' isOpen={isInfoTooltipOpen} onClose={closeAllPopups} title={message.text} img={message.img} />\n\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={onUpdateUser} />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={onUpdateAvatar} />\n            </div>\n        </CurrentUserContext.Provider >\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}