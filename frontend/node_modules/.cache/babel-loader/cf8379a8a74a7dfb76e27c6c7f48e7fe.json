{"ast":null,"code":"import _classCallCheck from\"/Users/zeninmatvey/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zeninmatvey/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getCards\",value:function getCards(){return fetch(this._url+'/cards',{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"getApiUserInfo\",value:function getApiUserInfo(){return fetch(this._url+'/users/me',{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"setApiUserInfo\",value:function setApiUserInfo(newdata){return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify({name:newdata.userName,about:newdata.userAbout})}).then(this._checkResponse);}},{key:\"postCards\",value:function postCards(data){return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(data){return fetch(this._url+\"/cards/\".concat(data),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"setAvatar\",value:function setAvatar(data){return fetch(this._url+'/users/me/avatar',{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.userAvatar})}).then(this._checkResponse);}},{key:\"setLike\",value:function setLike(data){return fetch(this._url+\"/cards/likes/\".concat(data),{method:'PUT',headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(data){return fetch(this._url+\"/cards/likes/\".concat(data),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}]);return Api;}();var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-25',headers:{authorization:'664aaf42-3a4d-4948-aa52-e5498063f0fe','Content-Type':'application/json'}});export{api};","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/mesto-react/src/utils/Api.jsx"],"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","newdata","body","JSON","stringify","name","userName","about","userAbout","data","link","avatar","userAvatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url\n        this._headers = config.headers\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getCards() {\n        return fetch(this._url + '/cards', {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._checkResponse);\n    }\n\n    getApiUserInfo() {\n        return fetch(this._url + '/users/me', {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._checkResponse);\n    }\n\n    setApiUserInfo(newdata) {\n        return fetch(this._url + '/users/me', {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: newdata.userName,\n                    about: newdata.userAbout\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    postCards(data) {\n        return fetch(this._url + '/cards', {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: data.name,\n                    link: data.link\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    deleteCard(data) {\n        return fetch(this._url + `/cards/${data}`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n\n    setAvatar(data) {\n        return fetch(this._url + '/users/me/avatar', {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: data.userAvatar\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    setLike(data) {\n        return fetch(this._url + `/cards/likes/${data}`, {\n                method: 'PUT',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n\n    deleteLike(data) {\n        return fetch(this._url + `/cards/likes/${data}`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n}\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n        authorization: '664aaf42-3a4d-4948-aa52-e5498063f0fe',\n        'Content-Type': 'application/json'\n    }\n})\n\nexport { api }"]},"metadata":{},"sourceType":"module"}