{"ast":null,"code":"export var BASE_URL='http://api.mattzenn.nomoredomains.club';// const jwt = localStorage.getItem('token')\nvar handleResponse=function handleResponse(response){return response.ok?response.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(response.status));};export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{// Authorization: `Bearer ${jwt}`,\n\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(handleResponse);};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{// Authorization: `Bearer ${jwt}`,\n\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(handleResponse);};export var getContent=function getContent(token){console.log(\"\\u0442\\u043E\\u043A\\u0435\\u043D \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0438 \".concat(token));return fetch(\"\".concat(BASE_URL,\"/users/\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(handleResponse);};export var ApiUserInfo=function ApiUserInfo(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{Authorization:\"Bearer \".concat(token),\"Content-Type\":\"application/json\"}}).then(handleResponse);};","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/src/utils/auth.jsx"],"names":["BASE_URL","handleResponse","response","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","console","log","ApiUserInfo","Authorization"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,wCAAjB,CACP;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,CAAcD,QAAQ,CAACE,IAAT,EAAd,CAAgCC,OAAO,CAACC,MAAR,gDAAyBJ,QAAQ,CAACK,MAAlC,EAApC,EAA/B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAG/BC,OAAO,CAAE,CACL;AACA,eAAgB,kBAFX,CAHsB,CAO/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,QAAQ,CAAEA,QAAZ,CAAsBC,KAAK,CAAEA,KAA7B,CAAf,CAPyB,CAAvB,CAAL,CASFO,IATE,CASGhB,cATH,CAAP,CAUH,CAXM,CAaP,MAAO,IAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,QAAD,CAAWC,KAAX,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAG/BC,OAAO,CAAE,CACL;AACA,eAAgB,kBAFX,CAHsB,CAO/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,QAAQ,CAAEA,QAAZ,CAAsBC,KAAK,CAAEA,KAA7B,CAAf,CAPyB,CAAvB,CAAL,CASFO,IATE,CASGhB,cATH,CAAP,CAWH,CAZM,CAcP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjCC,OAAO,CAACC,GAAR,8GAAkCF,KAAlC,GACA,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,KADuB,CAG/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAGL,iCAA2BO,KAA3B,CAHK,CAHsB,CAAvB,CAAL,CASFH,IATE,CASGhB,cATH,CAAP,CAUH,CAZM,CAcP,MAAO,IAAMsB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,KAAD,CAAW,CAClC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACjCY,MAAM,CAAE,KADyB,CAGjCC,OAAO,CAAE,CACLW,aAAa,kBAAYJ,KAAZ,CADR,CAEL,eAAgB,kBAFX,CAHwB,CAAzB,CAAL,CAQFH,IARE,CAQGhB,cARH,CAAP,CAUH,CAXM","sourcesContent":["export const BASE_URL = 'http://api.mattzenn.nomoredomains.club'\n// const jwt = localStorage.getItem('token')\n\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`)\n\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n\n        headers: {\n            // Authorization: `Bearer ${jwt}`,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ password: password, email: email })\n    })\n        .then(handleResponse)\n}\n\nexport const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n\n        headers: {\n            // Authorization: `Bearer ${jwt}`,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ password: password, email: email })\n    })\n        .then(handleResponse)\n\n}\n\nexport const getContent = (token) => {\n    console.log(`токен для проверки ${token}`)\n    return fetch(`${BASE_URL}/users/`, {\n        method: 'GET',\n\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(handleResponse)\n}\n\nexport const ApiUserInfo = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n\n        headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then(handleResponse)\n\n}"]},"metadata":{},"sourceType":"module"}