{"ast":null,"code":"var _jsxFileName = \"/Users/zeninmatvey/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import PopupWithForm from './PopupWithForm'\n\nimport Form from './Form';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onUpdateUser,\n  onClose\n}) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); // Подписка на контекст\n\n  const currentUser = React.useContext(CurrentUserContext); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    formName: \"profile-edit\",\n    onSubmit: handleSubmit,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isModal: true,\n    isOpen: isOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this) // <PopupWithForm name='profile-edit' title='Редактировать профиль' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n  //     <input id=\"userName\" name=\"userName\" className=\"popup__input popup__input_user_name\" type=\"text\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required value={name || ''}  onChange={handleNameChange}></input>\n  //     <span id=\"userName-error\" className=\"popup__input-error\"></span>\n  //     <input id=\"userAbout\" name=\"userAbout\" className=\"popup__input popup__input_user_description\" type=\"text\" placeholder=\"Профессия\" minLength=\"2\" maxLength=\"200\" required value={description || ''}  onChange={handleDescriptionChange}></input>\n  //     <span id=\"userAbout-error\" className=\"popup__input-error\"></span>\n  // </PopupWithForm>\n  ;\n}\n\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.jsx"],"names":["React","Form","CurrentUserContext","EditProfilePopup","isOpen","onUpdateUser","onClose","name","setName","useState","description","setDescription","currentUser","useContext","useEffect","about","props","handleNameChange","e","target","value","handleDescriptionChange","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAGA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAA1B,EAA6D;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC,CAFyD,CAIzD;;AACA,QAAMG,WAAW,GAAGZ,KAAK,CAACa,UAAN,CAAiBX,kBAAjB,CAApB,CALyD,CAOzD;AACA;;AACAF,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClBN,IAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACC,WAAW,CAACG,KAAb,CAAd;AACH,GAHD,EAGG,CAACH,WAAD,EAAcI,KAAK,CAACZ,MAApB,CAHH;;AAKA,WAASa,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBV,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,uBAAT,CAAiCH,CAAjC,EAAoC;AAChCP,IAAAA,cAAc,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACK,cAAF;AACAlB,IAAAA,YAAY,CAAC;AACTE,MAAAA,IAAI,EAAEA,IADG;AAETQ,MAAAA,KAAK,EAAEL;AAFE,KAAD,CAAZ;AAKH;;AAED,sBACI,QAAC,IAAD;AACD,IAAA,QAAQ,EAAC,cADR;AAED,IAAA,QAAQ,EAAEY,YAFT;AAGD,IAAA,KAAK,EAAC,2HAHL;AAID,IAAA,UAAU,EAAC,wDAJV;AAKD,IAAA,OAAO,EAAE,IALR;AAMD,IAAA,MAAM,EAAElB;AANP;AAAA;AAAA;AAAA;AAAA,UADJ,CASI;AACA;AACA;AACA;AACA;AACA;AAdJ;AAiBH;;GAhDQD,gB;;KAAAA,gB;AAkDT,eAAeA,gBAAf","sourcesContent":["import React from 'react'\n// import PopupWithForm from './PopupWithForm'\nimport Form from './Form'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n\nfunction EditProfilePopup({ isOpen, onUpdateUser, onClose }) {\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext)\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n    function handleNameChange(e) {\n        setName(e.target.value)\n    }\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        onUpdateUser({\n            name: name,\n            about: description,\n        })\n\n    }\n\n    return (\n        <Form\n       formName='profile-edit'\n       onSubmit={handleSubmit}\n       title='Редактировать профиль'\n       buttonText='Сохранить'\n       isModal={true}\n       isOpen={isOpen}\n     ></Form>\n        // <PopupWithForm name='profile-edit' title='Редактировать профиль' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n        //     <input id=\"userName\" name=\"userName\" className=\"popup__input popup__input_user_name\" type=\"text\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required value={name || ''}  onChange={handleNameChange}></input>\n        //     <span id=\"userName-error\" className=\"popup__input-error\"></span>\n        //     <input id=\"userAbout\" name=\"userAbout\" className=\"popup__input popup__input_user_description\" type=\"text\" placeholder=\"Профессия\" minLength=\"2\" maxLength=\"200\" required value={description || ''}  onChange={handleDescriptionChange}></input>\n        //     <span id=\"userAbout-error\" className=\"popup__input-error\"></span>\n        // </PopupWithForm>\n    )\n\n}\n\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}