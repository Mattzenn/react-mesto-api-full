{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } // если ошибка, отклоняем промис\n\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(this._url + '/cards', {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getApiUserInfo() {\n    return fetch(this._url + '/users/me', {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setApiUserInfo(newdata) {\n    return fetch(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newdata.userName,\n        about: newdata.userAbout\n      })\n    }).then(this._checkResponse);\n  }\n\n  postCards(data) {\n    return fetch(this._url + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(data) {\n    return fetch(this._url + `/cards/${data}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setAvatar(data) {\n    return fetch(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.userAvatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  setLike(data) {\n    return fetch(this._url + `/cards/likes/${data}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(data) {\n    return fetch(this._url + `/cards/likes/${data}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: '664aaf42-3a4d-4948-aa52-e5498063f0fe',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/mesto-react/src/utils/Api.jsx"],"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getCards","fetch","method","then","getApiUserInfo","setApiUserInfo","newdata","body","JSON","stringify","name","userName","about","userAbout","postCards","data","link","deleteCard","setAvatar","avatar","userAvatar","setLike","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url\n        this._headers = config.headers\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getCards() {\n        return fetch(this._url + '/cards', {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._checkResponse);\n    }\n\n    getApiUserInfo() {\n        return fetch(this._url + '/users/me', {\n                method: 'GET',\n                headers: this._headers\n            })\n            .then(this._checkResponse);\n    }\n\n    setApiUserInfo(newdata) {\n        return fetch(this._url + '/users/me', {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: newdata.userName,\n                    about: newdata.userAbout\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    postCards(data) {\n        return fetch(this._url + '/cards', {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: data.name,\n                    link: data.link\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    deleteCard(data) {\n        return fetch(this._url + `/cards/${data}`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n\n    setAvatar(data) {\n        return fetch(this._url + '/users/me/avatar', {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: data.userAvatar\n                })\n            })\n            .then(this._checkResponse);\n    }\n\n    setLike(data) {\n        return fetch(this._url + `/cards/likes/${data}`, {\n                method: 'PUT',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n\n    deleteLike(data) {\n        return fetch(this._url + `/cards/likes/${data}`, {\n                method: 'DELETE',\n                headers: this._headers,\n            })\n            .then(this._checkResponse);\n    }\n}\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n        authorization: '664aaf42-3a4d-4948-aa52-e5498063f0fe',\n        'Content-Type': 'application/json'\n    }\n})\n\nexport { api }"]},"metadata":{},"sourceType":"module"}