{"ast":null,"code":"var _jsxFileName = \"/Users/zeninmatvey/Desktop/dev/react-mesto-auth/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Rigister';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    api.getApiUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    api.getCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function onUpdateUser(userData) {\n    api.setApiUserInfo(userData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function onUpdateAvatar(userData) {\n    api.setAvatar(userData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(cardData) {\n    api.postCards(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => console.log(err));\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function onCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  });\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          setEmail(res.data.email);\n        }\n      });\n      history.push('/');\n    }\n  }\n\n  function handleRegistration(password, email) {\n    auth.register(password, email).then(result => {\n      setEmail(result.data.email);\n      alert('Вы успешно зарегистрировались :)');\n    }).catch(err => alert(err, 'Что-то пошло не так :('));\n  }\n\n  function handleAuth(password, email) {\n    auth.authorize(password, email).then(token => {\n      auth.getContent(token).then(res => {\n        setEmail(res.data.email);\n        setLoggedIn(true);\n      });\n    }).catch(err => console.log(err));\n  }\n\n  function onSignOut() {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/sign-up');\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: onCardClick,\n          handleCardLike: handleCardLike,\n          handleCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            isOpen: isEditProfilePopupOpen,\n            onRegister: handleRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            isOpen: isEditProfilePopupOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: onUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: onUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"kAcxlrueSiLYlINUDmmwsZZDy5s=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/react-mesto-auth/src/components/App.jsx"],"names":["React","useState","useEffect","Header","Footer","Main","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Route","Switch","useHistory","ProtectedRoute","Login","Register","auth","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","history","email","setEmail","getApiUserInfo","then","data","catch","err","console","log","getCards","onUpdateUser","userData","setApiUserInfo","closeAllPopups","onUpdateAvatar","setAvatar","handleAddPlaceSubmit","cardData","postCards","newCard","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","onCardClick","tokenCheck","jwt","localStorage","getItem","getContent","res","push","handleRegistration","password","register","result","alert","handleAuth","authorize","token","onSignOut","removeItem"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Main from './Main'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport api from '../utils/api'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport ProtectedRoute from './ProtectedRoute'\nimport Login from './Login'\nimport Register from './Rigister'\nimport * as auth from '../utils/auth'\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false)\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false)\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [currentUser, setCurrentUser] = useState({})\n    const [cards, setCards] = useState([])\n    const [loggedIn, setLoggedIn] = useState(false)\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n\n    useEffect(() => {\n        api.getApiUserInfo().then((data) => {\n            setCurrentUser(data)\n        })\n            .catch((err) => console.log(err))\n    }, [])\n\n    useEffect(() => {\n        api.getCards()\n            .then((data) => {\n                setCards(data)\n            })\n            .catch((err) => console.log(err))\n    }, [])\n\n    function onUpdateUser(userData) {\n        api.setApiUserInfo(userData)\n            .then((data) => {\n                setCurrentUser(data)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function onUpdateAvatar(userData) {\n        api.setAvatar(userData)\n            .then((data) => {\n                setCurrentUser(data)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleAddPlaceSubmit(cardData) {\n        api.postCards(cardData)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(cards.filter((item) => item !== card))\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function onCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setSelectedCard(null)\n    }\n\n    useEffect(() => {\n        tokenCheck()\n      })\n   \n      function tokenCheck() {\n        const jwt = localStorage.getItem('jwt')\n   \n        if(jwt) {\n          auth.getContent(jwt)\n            .then((res) => {\n              if(res) {\n                setLoggedIn(true)\n                setEmail(res.data.email)\n              }\n            })\n            history.push('/')\n        }\n      }\n\n      function handleRegistration(password, email) {\n        auth.register(password, email)\n          .then((result) => {\n            setEmail(result.data.email)\n            alert('Вы успешно зарегистрировались :)')\n          })\n          .catch((err) => alert(err, 'Что-то пошло не так :('))\n      }\n    \n      function handleAuth(password, email) {\n        auth.authorize(password, email)\n          .then((token) => {\n            auth.getContent(token)\n              .then((res) => {\n                setEmail(res.data.email)\n                setLoggedIn(true)\n              })\n          })\n          .catch((err) => console.log(err))\n      }\n    \n      function onSignOut() {\n        localStorage.removeItem('jwt')\n        setLoggedIn(false)\n        history.push('/sign-up')\n      }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header loggedIn={loggedIn} email={email}/>\n                <Switch>\n                    <ProtectedRoute exact path='/' loggedIn={loggedIn} component={Main} onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={onCardClick} handleCardLike={handleCardLike} handleCardDelete={handleCardDelete} cards={cards}/>\n                    <Route path='/sign-in'>\n                        <Register isOpen={isEditProfilePopupOpen} onRegister={handleRegistration}/>\n                    </Route>\n                    <Route path='/sign-up'>\n                        <Login isOpen={isEditProfilePopupOpen} />\n                    </Route>\n                </Switch>\n                <Footer />\n\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={onUpdateUser} />\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={onUpdateAvatar} />\n            </div>\n        </CurrentUserContext.Provider >\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}