{"ast":null,"code":"import _classCallCheck from\"/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getCards\",value:function getCards(){return fetch(this._url+'/cards',{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"getApiUserInfo\",value:function getApiUserInfo(){return fetch(this._url+'/users/me',{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"setApiUserInfo\",value:function setApiUserInfo(newdata){return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify({name:newdata.name,about:newdata.about})}).then(this._checkResponse);}},{key:\"postCards\",value:function postCards(data){return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(data){return fetch(this._url+\"/cards/\".concat(data),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"setAvatar\",value:function setAvatar(data){return fetch(this._url+'/users/me/avatar',{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){return fetch(this._url+\"/cards/\".concat(id,\"/likes\"),{method:\"\".concat(isLiked?'PUT':'DELETE'),headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(data){return fetch(this._url+\"/cards/likes/\".concat(data),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}}]);return Api;}();var jwt=localStorage.getItem('token');console.log(\"\\u042D\\u0442\\u043E api \".concat(jwt));var api=new Api({url:'http://api.mattzenn.nomoredomains.club',headers:{Authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","newdata","body","JSON","stringify","name","about","data","link","avatar","id","isLiked","jwt","localStorage","getItem","console","log","api","Authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url\n        this._headers = config.headers\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getCards() {\n        return fetch(this._url + '/cards', {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(this._checkResponse);\n    }\n\n    getApiUserInfo() {\n        return fetch(this._url + '/users/me', {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then(this._checkResponse);\n    }\n\n    setApiUserInfo(newdata) {\n        return fetch(this._url + '/users/me', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: newdata.name,\n                about: newdata.about\n            })\n        })\n            .then(this._checkResponse);\n    }\n\n    postCards(data) {\n        return fetch(this._url + '/cards', {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._checkResponse);\n    }\n\n    deleteCard(data) {\n        return fetch(this._url + `/cards/${data}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._checkResponse);\n    }\n\n    setAvatar(data) {\n        return fetch(this._url + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n            .then(this._checkResponse);\n    }\n\n    changeLikeCardStatus(id, isLiked) {\n        return fetch(this._url + `/cards/${id}/likes`, {\n            method: `${isLiked ? 'PUT' : 'DELETE'}`,\n            headers: this._headers\n        })\n            .then(this._checkResponse)\n    }\n\n    deleteLike(data) {\n        return fetch(this._url + `/cards/likes/${data}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(this._checkResponse);\n    }\n}\n\nconst jwt = localStorage.getItem('token')\n\nconsole.log(`Это api ${jwt}`)\n\nconst api = new Api({\n    url: 'http://api.mattzenn.nomoredomains.club',\n    headers: {\n        Authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json',\n    }\n})\n\nexport default api"]},"metadata":{},"sourceType":"module"}