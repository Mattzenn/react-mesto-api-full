{"ast":null,"code":"var _jsxFileName = \"/Users/zeninmatvey/Desktop/dev/mesto-react/src/components/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  onCardClick\n}) {\n  _s();\n\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    api.getCards().then(data => {\n      console.log(data);\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: userInfo.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__avatar-button\",\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-button\",\n            onClick: onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"profile__about\",\n          children: userInfo.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: onCardClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/zeninmatvey/Desktop/dev/mesto-react/src/components/Main.jsx"],"names":["React","api","Card","CurrentUserContext","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","cards","setCards","useState","currentUser","useContext","useEffect","getCards","then","data","console","log","catch","err","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","userInfo","avatar","name","about"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { api } from '../utils/Api'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n\n    const [cards, setCards] = React.useState([])\n    const currentUser = React.useContext(CurrentUserContext)\n\n    React.useEffect(() => {\n        api.getCards().then((data) => {\n            console.log(data)\n            setCards(data)\n        })\n            .catch((err) => console.log(err))\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-wrapper\">\n                    <img className=\"profile__avatar\" src={userInfo.avatar} alt=\"Аватар\"></img>\n                    <button type=\"button\" className=\"profile__avatar-button\" onClick={onEditAvatar}></button>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__container\">\n                        <h1 className=\"profile__name\">{userInfo.name}</h1>\n                        <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\n                    </div>\n                    <h2 className=\"profile__about\">{userInfo.about}</h2>\n                </div>\n                <button type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}></button>\n            </section>\n            <section className=\"cards\">\n                <ul className=\"elements\">\n                    {cards.map((card) => <Card key={card._id} card={card} onCardClick={onCardClick} />)}\n                </ul>\n            </section>\n        </main>\n    )\n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}